[General]
;
; number of subsamples can be explicitly specified, but it is redundant
; do not use this parameter unless you exactly know what you are doing
; 
; in case of MPI number of subsamples must be same as number of MPI processes
; use mpiexec to specify number of subsamples, i.e.:
;   mpiexec -n 8 model.exe
;
; if you not using MPI then you must create run id in database first 
; and specify number of subsamples for that run id
; in that case number of subsamples specified in ini-file or command line are rejected
;
; Subsamples = 8

;
; random seed value
;
StartingSeed=16807

;
; number of cases for case-based models
;
;Cases = 5000
Cases = 5000

;
; simulation end time for time-based models
;
; SimulationEnd = 100

;
; some other option:
;
; Population=69899568

;
; openM++ run options
;
[OpenM]

;
; database connection string
;
; Database = "Database=Alpha1.sqlite; Timeout=86400; OpenMode=ReadWrite;"

;
; profile name to select run options from profile_option database table
; default value is model name
;
; OptionsProfile = Alpha1

;
; run id can be explicitly specified, but you need to create it first
; do not use this parameter unless you exactly know what are you doing
;
; RunId = 

;
; set id is working set id to get source input parameters from
; if set id specified 
;    then input parameters from that workset or base run of the workset used as source
;    else min(set id) of the model used as source for input parameters
;
; SetId = 

;
; if true then use sparse output to database
;
; SparseOutput = false

; if use sparse and abs(value) <= nullValue then value not stored
;
; SparseNullValue       ; sparse null value, you want to keep default = DBL_EPSILON

;
; log settings:
; log can be enabled/disabled for 3 independent streams:
;   console         - cout stream
;   "last run" file - log file with specified name, truncated on every model run
;   "stamped" file  - log file with unique name, created for every model run
;
; "stamped" name produced from "last run" name by adding time-stamp and pid-stamp, i.e.:
;   modelOne.log => modelOne_20120817_160459_0148.1234.log
;
LogToConsole     = true       ; log to console
LogToFile        = true       ; log to file
; LogToStampedFile = true       ; log to "stamped" file
; LogUseTimeStamp  = true       ; use time-stamp in log "stamped" file name
; LogUsePidStamp   = true       ; use pid-stamp in log "stamped" file name
; LogFilePath      = alpha1.log ; log file path, default = current/dir/modelExeName.log 
; LogSql           = true       ; debug only: log sql statements
