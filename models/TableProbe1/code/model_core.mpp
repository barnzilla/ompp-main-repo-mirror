// Copyright (c) 2013-2014 OpenM++
// This code is licensed under MIT license (see LICENSE.txt for details)

//LABEL(model_core, EN) Model settings

/* NOTE(model_core, EN)
	This module contains model settings and the central simulation function.
*/

// The model version number
version 1, 0, 0, 0;

// The model type
model_type case_based;

// The data type used to represent time
time_type double;

// Supported languages
languages {
	EN // English
};

// the following line commented to avoid event_trace=on runtime warning in ompp
//options case_checksum=on event_trace=on;

/**
 * Simulates a single case.
 * 
 * Called by code in a simulation framework module.
 */
void CaseSimulation(case_info &ci)
{
    extern void SimulateEvents(); // defined in a simulation framework module

    ci.case_counter++;

    // skip superfluous cases
    if ((OneScript && ci.case_counter > 1)
        || (ci.case_counter > SIZE(SCRIPT) - 1)) {
        return;
    }

	// Initialize the person actor
	auto prPerson = new Person();
	prPerson->Start();

	// Simulate events until there are no more.
    SimulateEvents();
}

/**
 * Invoked at the beginning of the Simulation function.
 *
 * @param [in,out] ci Additional information related to the case.
 */
void Simulation_start(case_info &ci)
{
    // Initialize case information in ci (if used).
    ci.case_counter = 0;
}

/**
 * Invoked at the end of the Simulation function.
 *
 * @param [in,out] ci Additional information related to the case.
 */
void Simulation_end(case_info &ci)
{
    // Finalize case information in ci (if used).
}
