//LABEL(Emigration, EN) Module for Emigration

/* NOTE(Emigration, EN)
	This module implements all Emigration-related functionality.
*/

parameters 
{
  //EN Emigration rate 
  double EmigrationRate[SEX][RANGE_AGE_101][YEAR];

  //EN Annual hazard of death
	model_generated double EmigrationHazard[SEX][RANGE_AGE][YEAR];
};

void PreSimulation(void)
{
  for (int nS = 0; nS < SIZE(SEX); nS++ ) {
    for (int nA = 0; nA < SIZE(RANGE_AGE); nA++ ) {
      for (int nY = 0; nY < SIZE(YEAR); nY++ ) {
        double dRate = EmigrationRate[nS][nA][nY];
        double dHazard = - log( 1 - dRate );
        EmigrationHazard[nS][nA][nY] = dHazard; 
      }
    }
  }
}

actor Person
{
  //EN Emigrated
  logical emigrated = { FALSE };

  event timeEmigrationEvent, EmigrationEvent;	//EN Emigration event
};

// The time function of EmigrationEvent
TIME Person::timeEmigrationEvent()
{
	TIME tEventTime = TIME_INFINITE;

  int nYearIndex = RANGE_POS(YEAR, mid_year);
  tEventTime = WAIT( - TIME( log( RandUniform(10) ) / EmigrationHazard[sex][range_age][nYearIndex] ) );

	return tEventTime;
}

// The implement function of EmigrationEvent
void Person::EmigrationEvent()
{
	emigrated = TRUE;

	// Remove the actor from the simulation.
	Finish();
}

table Person DeparturesByYear //EN Departures by mid-year
[ !phantom && emigrated ]
{
  {
    unit
  }
  * mid_year
};
