<?xml version="1.0" encoding="utf-8"?>
<Project InitialTargets="Validate;Diagnostics" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">

  
  <!-- 
  Validate
  -->


  <Target Name="Validate">
    <Error
	    Text="MODEL_NAME cannot be empty"
        Condition=" ( '$(MODEL_NAME)' == '' )" />
    <Error
	    Text="ENABLE_SCENARIO_PARAMETERS must be either 0 or 1. Value is $(ENABLE_SCENARIO_PARAMETERS)"
        Condition=" ! ( '$(ENABLE_SCENARIO_PARAMETERS)' == '0' Or '$(ENABLE_SCENARIO_PARAMETERS)' == '1' )" />
    <Error
	    Text="SCENARIO_PARAMETERS_FOLDER does not exist. Value is $(SCENARIO_PARAMETERS_FOLDER)"
        Condition=" ( '$(PUBLISH_SCENARIO)' == '1' And ! Exists('$(SCENARIO_PARAMETERS_FOLDER)') )" />
    <Error
	    Text="ENABLE_FIXED_PARAMETERS must be either 0 or 1. Value is $(ENABLE_FIXED_PARAMETERS)"
        Condition=" ! ( '$(ENABLE_FIXED_PARAMETERS)' == '0' Or '$(ENABLE_FIXED_PARAMETERS)' == '1' )" />
    <Error
	    Text="FIXED_PARAMETERS_FOLDER does not exist. Value is $(FIXED_PARAMETERS_FOLDER)"
        Condition=" ( '$(ENABLE_FIXED_PARAMETERS)' == '1' And ! Exists('$(FIXED_PARAMETERS_FOLDER)') )" />
    <Error
	    Text="GRID_COMPUTING must be either EMPTY or MPI. Value is $(GRID_COMPUTING)"
        Condition=" ! ( '$(GRID_COMPUTING)' == 'EMPTY' Or '$(GRID_COMPUTING)' == 'MPI' )" />
    <Error
	    Text="DB_PROVIDER must be set to SQLITE. Value is $(DB_PROVIDER)"
        Condition=" ! ( '$(DB_PROVIDER)' == 'SQLITE' )" />
    <Error
	    Text="RUN_SCENARIO must be either 0 or 1. Value is $(RUN_SCENARIO)"
        Condition=" ! ( '$(RUN_SCENARIO)' == '0' Or '$(RUN_SCENARIO)' == '1' )" />
    <Error
	    Text="RUN_EXPORT must be either 0 or 1. Value is $(RUN_EXPORT)"
        Condition=" ! ( '$(RUN_EXPORT)' == '0' Or '$(RUN_EXPORT)' == '1' )" />
    <Error
	    Text="RUN_EXCEL must be either 0 or 1. Value is $(RUN_EXCEL)"
        Condition=" ! ( '$(RUN_EXCEL)' == '0' Or '$(RUN_EXCEL)' == '1' )" />
  </Target>

  
  <!-- 
  Clean
  -->
  
  
  <Target Name="OmcClean">
    <Message Text="Delete omc compiler output" />
    <RemoveDir Directories="$(OMC_OUT_DIR)" />
  </Target>

  <PropertyGroup>
    <CleanDependsOn>OmcClean;$(CleanDependsOn)</CleanDependsOn>
  </PropertyGroup>

  
  <!-- 
  Build
  -->
  
  
  <Target Name="OmcCompile"
          Inputs="@(OMC_INPUTS)"
          Outputs="@(OMC_OUTPUTS)"
          >
    <MakeDir Directories="$(OMC_OUT_DIR)" />
    <Message Text="$(OM_BIN_DIR)/$(OMC_EXE) -m $(MODEL_NAME) -s $(SCENARIO_NAME) -i $(OMC_IN_DIR) -o $(OMC_OUT_DIR) -u $(OMC_USE_DIR) $(OMC_IN_SCENARIO_OPT) $(OMC_IN_FIXED_OPT)" />
    <Exec Command="&quot;$(OM_BIN_DIR)/$(OMC_EXE)&quot; -m $(MODEL_NAME) -s $(SCENARIO_NAME) -i $(OMC_IN_DIR) -o $(OMC_OUT_DIR) -u $(OMC_USE_DIR) $(OMC_IN_SCENARIO_OPT) $(OMC_IN_FIXED_OPT)" />
    <ItemGroup>
      <AllSqlScript Include="$(OMC_OUT_DIR)/*.sql" />
    </ItemGroup>
    <Copy SourceFiles="@(AllSqlScript)" DestinationFolder="$(OutDir)" />
  </Target>

  <PropertyGroup>
    <BuildDependsOn>OmcCompile;$(BuildDependsOn)</BuildDependsOn>
  </PropertyGroup>
  
  
  <!--
  SQLitePublish
  -->

  
  <!-- The following properties helps make the SQLitePublish target and output more readable. -->
  <PropertyGroup>
    <MODEL_PUBLISH_TICKLE>$(MODEL_BIN_DIR)/$(MODEL_NAME).publish.tickle</MODEL_PUBLISH_TICKLE>
    <OM_MODEL_DB>$([MSBuild]::MakeRelative($(ProjectDir),$(OutDir)$(MODEL_NAME).sqlite))</OM_MODEL_DB>
    <OM_SQL_DIR_REL>$([MSBuild]::MakeRelative($(ProjectDir),$(OM_SQL_DIR)))</OM_SQL_DIR_REL>
    <!--  Replace back slash by forward slash. -->
    <OM_SQL_DIR_REL>$(OM_SQL_DIR_REL.Replace(&quot;\&quot;,&quot;/&quot;))</OM_SQL_DIR_REL>
  </PropertyGroup>

  <Target Name="SQLitePublish" 
          Inputs="@(SQLITE_INPUTS)"
          Outputs="$(MODEL_PUBLISH_TICKLE)"
          AfterTargets="link"
          >
    <Delete Files="$(OM_MODEL_DB)" />
    <Message Text="$(SQLITE_EXE) $(OM_MODEL_DB) &lt; $(OM_SQL_DIR_REL)/sqlite/create_db_sqlite.sql" />
    <Exec Command="&quot;$(OM_BIN_DIR)/$(SQLITE_EXE)&quot; $(OM_MODEL_DB) &lt; $(OM_SQL_DIR_REL)/sqlite/create_db_sqlite.sql" />
    <Message Text="$(SQLITE_EXE) $(OM_MODEL_DB) &lt; $(OM_SQL_DIR_REL)/sqlite/optional_meta_views_sqlite.sql" />
    <Exec Command="&quot;$(OM_BIN_DIR)/$(SQLITE_EXE)&quot; $(OM_MODEL_DB) &lt; $(OM_SQL_DIR_REL)/sqlite/optional_meta_views_sqlite.sql" />
    <Message Text="$(SQLITE_EXE) $(OM_MODEL_DB) &lt; src/$(MODEL_NAME)_create_model.sql" />
    <Exec Command="&quot;$(OM_BIN_DIR)/$(SQLITE_EXE)&quot; $(OM_MODEL_DB) &lt; src/$(MODEL_NAME)_create_model.sql" />
    <Message Text="$(SQLITE_EXE) $(OM_MODEL_DB) &lt; src/$(MODEL_NAME)_optional_views.sql" />
    <Exec Command="&quot;$(OM_BIN_DIR)/$(SQLITE_EXE)&quot; $(OM_MODEL_DB) &lt; src/$(MODEL_NAME)_optional_views.sql" />
    <Message Text="$(SQLITE_EXE) $(OM_MODEL_DB) &lt; src/$(MODEL_NAME)_Base.sql" />
    <Exec Command="&quot;$(OM_BIN_DIR)/$(SQLITE_EXE)&quot; $(OM_MODEL_DB) &lt; src/$(MODEL_NAME)_Base.sql" />
    <Touch  Files="$(MODEL_PUBLISH_TICKLE)"
            AlwaysCreate="true"
            />
  </Target>


  <!--
  RunModel
  -->

  
  <PropertyGroup>
    <!-- The following property prepares arguments to the model executable. -->
    <MODEL_OPTS Condition="'$(MEMBERS)'   != ''">$(MODEL_OPTS) -General.Subsamples $(MEMBERS)</MODEL_OPTS>
    <MODEL_OPTS Condition="'$(PROCESSES)' != ''">$(MODEL_OPTS) -n $(PROCESSES) </MODEL_OPTS>
    <MODEL_OPTS Condition="'$(THREADS)'   != ''">$(MODEL_OPTS) -General.Threads $(THREADS)</MODEL_OPTS>
    <RUN_MODEL_TICKLE>$(MODEL_BIN_DIR)/$(MODEL_NAME).run.tickle</RUN_MODEL_TICKLE>
  </PropertyGroup>

  <Target Name="RunModel"
          Condition="'$(RUN_SCENARIO)'=='1' And '$(GRID_COMPUTING)' == 'EMPTY'" 
          Inputs="$(MODEL_PUBLISH_TICKLE)"
          Outputs="$(RUN_MODEL_TICKLE)"
          AfterTargets="SQLitePublish"
          >
    <Message Text="Running scenario $(SCENARIO_NAME) using $(MODEL_NAME)..." />
    <Message Text="$(TargetPath) $(MODEL_OPTS)" />
    <Exec WorkingDirectory="$(TargetDir)"
          Command="$(TargetPath) $(MODEL_OPTS)"
          />
    <Touch  Files="$(RUN_MODEL_TICKLE)"
            AlwaysCreate="true"
            />
  </Target>


  <!--
  RunExport
  -->

  
  <PropertyGroup>
    <!-- excel_export -lang option to specify language to use for exported Excel workbook -->
    <EXCEL_EXPORT_OPT Condition="'$(EXPORT_LANG)'!=''">-lang $(EXPORT_LANG)</EXCEL_EXPORT_OPT>
  </PropertyGroup>

  <Target Name="RunExport"
          Condition="'$(RUN_EXPORT)'=='1'" 
          AfterTargets="RunModel"
          >
    <Message Text="Exporting scenario $(SCENARIO_NAME)..." />
    <Exec Command="$(OM_BIN_DIR)/$(EXCEL_EXPORT_EXE) $(EXCEL_EXPORT_OPT) $(OutDir)$(MODEL_NAME).sqlite $(OutDir)$(SCENARIO_NAME)(tbl).xlsx" ContinueOnError="true"/>
  </Target>

  
  <!--
  RunExcel
  -->

  
  <Target Name="RunExcel"
          Condition="'$(RUN_EXCEL)'=='1'"
          AfterTargets="RunExport"
          >
    <Message Text="Launching Excel on scenario $(SCENARIO_NAME)..." />
    <Exec Command="&quot;$(OutDir)$(SCENARIO_NAME)(tbl).xlsx&quot;" ContinueOnError="true"/>
  </Target>

 
  <!-- 
  Diagnostics
  -->
 
 
  <Target Name="Diagnostics"
          Condition="'1'=='1'">
    <Message Text="MODEL_CODE_DIR=$(MODEL_CODE_DIR)" />
    <Message Text="OMC_INPUTS=@(OMC_INPUTS)" />
    <Message Text="OMC_OUTPUTS=@(OMC_OUTPUTS)" />
  </Target>

</Project>