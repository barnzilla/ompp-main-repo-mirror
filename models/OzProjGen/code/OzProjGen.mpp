//LABEL(OzProjGen, EN) Core simulation functions

/* NOTE(OzProjGen, EN)
	This module contains core simulation functions and definitions.
*/

// The model version number
version 0, 18, 0, 0;

// The model type
model_type case_based;

// The data type used to represent time
time_type double;

// Supported languages
languages {
	EN // English
};

parameters
{
   //EN Output file for synthetic starting population
   file MicroDataOutputFile;
};

/**
 * Simulates a single case.
 * 
 * Called by code in a simulation framework module.
 */
void CaseSimulation(case_info &ci)
{
    extern void SimulateEvents(); // defined in a simulation framework module

	// Initialize the person actor
	auto prPerson = new Person();
	prPerson->Start();

    // All initial characteristics are assigned in Start.
    // Dump attributes to the output file.
    auto ofs = ci.output_stream;

    for (int nJ=0; nJ<SIZE(PERSON_MICRODATA_COLUMNS); nJ++ ) {
    // Fields:
    switch ( nJ ) {
    case PMC_SEX:
      (*ofs) << (int) prPerson->sex;
      break;
    case PMC_AGE:
      (*ofs) << (int) prPerson->integer_age;
      break;
    case PMC_REGION:
      (*ofs) << (int) prPerson->region;
      break;
    case PMC_NATIVE_BORN:
      (*ofs) << (int) prPerson->native_born;
      break;
    case PMC_RECENT_ARRIVAL:
      (*ofs) << (int) prPerson->recent_arrival;
      break;
    case PMC_YEARS_SINCE_ARRIVAL:
      (*ofs) << (int) prPerson->years_since_arrival;
      break;
    case PMC_INDIGENOUS:
      (*ofs) << (int) prPerson->indigenous;
      break;
    default:
      ; // Error
    }

    // Separators:
    if ( nJ < SIZE(PERSON_MICRODATA_COLUMNS) - 1 ) (*ofs) << ',';
    else (*ofs) << std::endl;
  }

	// Simulate events until there are no more.
    SimulateEvents();
}


// Invoked at the beginning of the Simulation function
void Simulation_start(case_info &ci)
{
    auto ofs = new std::ofstream(MicroDataOutputFile, ios_base::out | ios_base::trunc );

    if (!ofs->is_open()) {
        // fatal error (TODO)
        int j = 1;
    }
    ci.output_stream = ofs;
}

// Invoked at the end of the Simulation function
void Simulation_end(case_info &ci)
{
    delete ci.output_stream;
}


