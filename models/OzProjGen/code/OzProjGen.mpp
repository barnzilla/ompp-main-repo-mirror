//LABEL(OzProjGen, EN) Core simulation functions

/* NOTE(OzProjGen, EN)
	This module contains core simulation functions and definitions.
*/

// The model version number
version 0, 18, 0, 0;

// The model type
model_type case_based;

// The data type used to represent time
time_type double;

// Supported languages
languages {
	EN // English
};

parameters
{
   //EN Output file for synthetic starting population
   file MicroDataOutputFile;
};

/**
 * Simulates a single case.
 * 
 * Called by code in a simulation framework module.
 */
void CaseSimulation(case_info &ci)
{
    extern void SimulateEvents(); // defined in a simulation framework module

	// Initialize the person actor
	auto prPerson = new Person();
	prPerson->Start();

    // All initial characteristics are assigned in Start.

    // Push the fields in the correct order.
    for (int nJ = 0; nJ < SIZE(PERSON_MICRODATA_COLUMNS); nJ++ ) {
    // Fields:
    switch (nJ) {
    case PMC_SEX:
      ci.out_csv << (int) prPerson->sex;
      break;
    case PMC_AGE:
      ci.out_csv << (int) prPerson->integer_age;
      break;
    case PMC_REGION:
      ci.out_csv << (int) prPerson->region;
      break;
    case PMC_NATIVE_BORN:
      ci.out_csv << (int) prPerson->native_born;
      break;
    case PMC_RECENT_ARRIVAL:
      ci.out_csv << (int) prPerson->recent_arrival;
      break;
    case PMC_YEARS_SINCE_ARRIVAL:
      ci.out_csv << (int) prPerson->years_since_arrival;
      break;
    case PMC_INDIGENOUS:
      ci.out_csv << (int) prPerson->indigenous;
      break;
    default:
      ; // Error
    }

  }
  // All fields have been pushed, now write the record.
  ci.out_csv.write_record();

  // Simulate events until there are no more.
  SimulateEvents();
}

// Invoked at the beginning of the Simulation function
void Simulation_start(case_info &ci)
{
    ci.out_csv.open(MicroDataOutputFile);
}

// Invoked at the end of the Simulation function
void Simulation_end(case_info &ci)
{
  ci.out_csv.close();
}


