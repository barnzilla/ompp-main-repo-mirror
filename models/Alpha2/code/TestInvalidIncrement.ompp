// Copyright (c) 2013-2023 OpenM++ Contributors
// This code is licensed under MIT license (see LICENSE.txt for details)

//LABEL(TestInvalidIncrement, EN) Test invalid increment in entity table

#include "omc/omSimulation.h" // For IDE to understand C++ code in this module

#if 0 // Hide non-C++ syntactic island from IDE

options verify_valid_table_increment = on;  // default is on

entity Person
{
    double my_dbl;

    void update_funny_numbers(void);

    hook update_funny_numbers, HappinessReversalEvent, 43;
};


table Person IncrementTestTable
[integer_age >= 50]
{
    {
        value_out(my_dbl)
    }
};

//table Person IncrementTestTable
//[ integer_age >= 50 ]
//{
//    {
//        unit,
//        sum(value_in(my_dbl)),
//        value_out(my_dbl),
//        maximum(value_out(my_dbl)),
//        delta(my_dbl),
//        delta(event(my_dbl))
//    }
//};



#endif

void Person::update_funny_numbers(void)
{
    double x = 1.0;
    bool produce_increment_error = false;
    if (produce_increment_error) {
        x = 0.0;
    }
    my_dbl = std::log(x); // is -inf
}

//options event_trace = on;

