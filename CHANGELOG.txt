Please note:
  not all changes commented here, please use GitHub commits history for more details.

2019_??_??:
  model runtime now uses floating point infinity for time_infinite
  model runtime now uses floating point soft NAN for time_undef
  new options keyword time_infinite_is_32767 to support legacy Modgen model code which depends on that
  new options keyword time_undef_is_minus_one to support legacy Modgen model code which depends on that

2019_09_20:
  changes in ompp-ui: reorganize model pages
  small changes in c++ runtime and Go library to use same table names for all database vendors

2019_07_19:
  changes in ompp-ui: implemented pivot view UI and remove handsontable
  small changes in oms web-service to simplify input sets (scenarios) editing

2019_05_10:
  move all source code to GitHub
  remove from main repository Go, R, ompp-ui and docker sources

2019_03_07:
  following source code moved to github.com/openmpp:
    - all svn Go code
    - R, ompp-ui, docker
    - openmpp.org web-site

2018_02_05:
  openM++ user interface (ompp-ui) alpha version
  oms web-service API changes related to ompp-ui

2017_12_19:
  major changes: beta version of openM++ web-service to access (oms)
  minor changes and bug fixes, update for Visual Studio 2017
  pre-alpha version of openM++ user interface (ompp-ui)

2017_06_05:
  major release: parameters sub-values for probabilistic statistical analysis
  minor changes and bug fixes, update for Visual Studio 2017

2016_12_29:
  minor release: fix R test script and dbcopy utility bug in delete model

2016_12_24:
  localizataion: support for translated messages in models and omc

2016_11_22:
  minor release to fix performance issues for large parameters csv and compilation

2016_11_15:
  minor release to improve dbcopy utility and fix some bugs

2016_09_28:
  support for model "publish": 
    import-export into and from json and csv files for model, input parameters set, run results
    direct copy between databases (eg: model using SQLite local.db and central storage is MySQL)
  model can directly use csv file(s) for input parameters, no database required
  data access library, API in Go, import-export tools (alpha)

2016_03_22:
  minor release to improve modeling task support and R package

2016_02_16:
  compiler and openM++ model code is stable now
  support modeling task: run model with 1000x sets of input parameters
    Linux build:   g++ version 4.8.5
    Linux MPI:   OpenMPI 1.10.0
    Windows build: Visual Studio 2015 update 1
    Windows MPI:   Microsoft MPI v7

2015_01_06:
  support multiple modelling threads
  many changes in compiler

2014_10_07:
  many fixes and updates in compiler, runtime and models build
  export to Excel from model.sqlite database
  database schema now compatible with SQLite, MySQL, PostgreSQL, MSSQL, DB2

2014_09_11:
  beta version build for Windows and Linux (CentOS)

2014_03_08:
  beta version of R openMpp package to read and write OpenM++ database.

2013_11_20:
  minor changes to alpha version, one database column renamed
  initial version of R openMpp package to read and write OpenM++ database.

2013_10_22:
  alpha version build for Windows and Linux (CentOS)

Enjoy,
amc1999
