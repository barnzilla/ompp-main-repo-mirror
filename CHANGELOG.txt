Please note:
  not all changes commented here, please use GitHub release notes and commits history for more details.

2021_11_30:
  support Visual Studio 2022
  make fast and small csv output by dbcopy: NoAccumulatorsCsv option
  UI: download parameter as CSV file
  UI: run comparison

2021_11_01:
  model code: simplified and detailed UI, hide and show statements in model code
  model code: prohibit invalid use of time-like attributes in tables and events
  c++: move to bison version 3.x
  UI: create and edit input scenarios
  UI: allow to create and edit model run notes, input scenario notes, parameter notes
  UI: display messages to the user about IE is not supported

2021_10_04:
  add model run option to specify run notes in Markdown format
  UI: ability to create new workset
  UI: ability to edit model run notes
  build and publish Linux / Ubuntu release

2021_09_03:
  c++ code cleanup in order to eliminate c++ model build warnings
  UI: add model download feature to get model run results or input scenario(s)
  UI: add an ability to delete model run results, input scenario(s) or download files

2021_08_02:
  (breaking change) Change SimulationSeed from int to long long in Framework.odat
  Raise runtime error on out-of-bounds assignment to range, classification, partition
  Raise runtime error on invalid indices in GetTableValue or SetTableValue
  Raise runtime error on assignment to attribute in event time function
  openM++ UI cloud: allow download model, model run results, model input scenario
  model sql function: fix bug in aggregation functions: VAR, SD, SE, CV
  model sql function: add OM_IF() to provide if-then-else operator
  model sql function: add OM_DENOM() to protect from divide by zero
  ini-file: better handling of line \ continuation
  release notarized MacOS executables
  multiple other bug issues fixed

2021_06_29:
  full support of .csv parameters and .md parameter value notes in omc, at model runtime, dbcopy and UI
  Raise runtime exception on disallowed null entity pointer use
  New experimental utility CsvToDat
  Changes to event trace

2021_06_12:
  Bug fix: omc compiler error can occur with a parameter in csv format
  New version 2.1 of test_models
  adjust build and run scripts to develop and run models outside of OM_ROOT release folder
  support model-specific root folder, allow to use it in model code
  create  model-specific run templates for OzProj sample models
  add model localization macro for non-translated messages

2021_06_02:
  TablePresent() function for derived table model code
  bug fix in Modgen macros FixedGetTableValue and FixedSetTableValue for cross-compatible models
  bug fix in Modgen hide statement
  significant updates of test_models.pl and build Windows test_models.exe
  Windows: drop Win32 model.exe suffix, build release with only x64 exe's
  enhanced support of model ini-files for Visual Studio
  enhanced model version log
  build documentation archive as part of release
  build single page of wiki for offline use

2021_05_05:
  model code statements to suppress or retain parameters or tables in the model executable
  move wiki to GitHub
  update Xcode projects for Mac M1
  db schema change: increase option value size to 32000
  UI: remove empty parameters and tables groups

2021_04_15:
  clean shutdown of oms web-service by API post
  update oms web-service to save URL into file
  change ompp_ui start scripts and model build scripts to use oms URL from file
  flush model console log output
  openM++ ported to Apple M1 Arm CPU, natively, no x86 emulation

2021_04_07:
  clairvoyance detection and handling
  bug fix: update global time at the end of simulation in time-based models
  SimulationSeed in the example models is now set to 1 instead of 16807
  AddressSanitizer support to detect and debug memory violation issues
  support model development run options
  support EventTrace options to improve development process
  improve model trace performance for network shares
  UI: support persistent view for model parameters even model UI started from IDE debug session
  support multi-line values in model ini-files

2021_03_16:
  fix to Modgen UNDEF_VALUE issue in derived tables
  output tables suppression feature
  (it can break existing model code compilation): do not force import of std namespace into model code
  use STL filesystem instead of custom path handling functions
  cleanup compilation warnings in model c++ code generated by openM++ compiler

2021_03_04:
  Resolve specification ambiguity in event processing.
  Event times are recalculated using the same ordering as that used for events, ignoring event time.

2021_03_02:
  make sure model trace file truncated on new model run
  add Linux shell script to start ompp_ui
  pass browser user language to backend web-service
  fix language code bug in openMpp R package
  use OS independent build of openMpp R package

2021_02_09:
  raise runtime error if entity time uninitialized (non-finite when entering simulation)
  fix: c++ compiler error sometimes occurred with min_over, max_over
  eliminate spurious c++ signed/unsigned warnings using count() in entity sets

2021_02_02:
  start simulation (or case) with global time set to -time_infinite
  protect inappropriate just-in-time time syncs through entity links (entity_ptr)
  add new framework modules to control cases, refactor framework modules
  fix: label for a table measure or an identity attribute was sometimes ignored
  UI: persistent veiw for model parameters, save and restore default parameter view

2021_01_12:
  fix single cumrate problem
  UI: update axios version to fix security CVE identified by GitHub

2020_12_22:
  beta version of bi-lingual UI
  fix in model runtime to run the model if default scenario not read-only

2020_12_08:
  create "pull" synonym for model "import" keyword because import is reserved in c++20
  significant increase of omc CSV scenario processing performance 
  use Go modules
  minor bug fixes

2020_08_27:
  improve model debug experience: support parameter values inspection in IDEs debugger
  replace Visual Studio CSV output tools to support parameters and output tables output after model run
  deprecated: existing Visual Studio tools for CSV output and Excel output are deprecated
  allow to explicitly specify "base" model run to get parameters from previous model run
  add command line options to choose first or last model run without knowing run id
  add command line options to rename model input sets (a.k.a. scenarios), model run results or modeling tasks
  multiple bug fixes

2020_07_30:
  allow to use .csv or .tsv files to initialize parameters during model build
  allow to publish multiple input set (a.k.a. scenarios) during model build
  MSBuild: fix OM_ROOT environment variable issue
  Linux: resolve GDB breakpoint issue
  multiple minor changes and bug fixes

2020_07_04:
  fix c++ issue with Range.h, Partition.h, Classification.h
  MacOS: start openM++ UI by double click on bin/ompp_ui.command

2020_06_25:
  openM++ ported on MacOS
  improve IDE integration:
    - Visual Studio on Windows
    - Xcode on MacOS
    - Visual Studio Code on Linux

2020_05_06:
  add Python examples: how to use openM++ from Python
  add preliminary support for MacOS
  minor changes in UI and oms web-service

2020_04_09: minor changes
  VS projects: use Bypass execution policy to execute Powershell scripts
  omc compiler: check for possible key clash in model code
  Linux makefiles: exit if recursive sub-directory target fail

2020_04_09:
  minor changes to correctly pass Debug/Release/Win32/x64 from VS project to UI

2020_04_07:
BREAKING changes:
  support model run metadata digest and value digest (database schema changed)
Changes:
  various improvements in UI
  developer can open model UI as part of VS project build

2020_02_06:
BREAKING changes:
  implemented parameters import between models (database schema changed)

2019_11_20:
BREAKING changes:
  added default sub-value for input parameters (database schema changed)
Changes:
  model runtime now uses floating point infinity for time_infinite
  model runtime now uses floating point soft NAN for time_undef
  new options keyword time_infinite_is_32767 to support legacy Modgen model code which depends on that
  new options keyword time_undef_is_minus_one to support legacy Modgen model code which depends on that

2019_09_20:
  changes in ompp-ui: reorganize model pages
  small changes in c++ runtime and Go library to use same table names for all database vendors

2019_07_19:
  changes in ompp-ui: implemented pivot view UI and remove handsontable
  small changes in oms web-service to simplify input sets (scenarios) editing

2019_05_10:
  move all source code to GitHub
  remove from main repository Go, R, ompp-ui and docker sources

2019_03_07:
  following source code moved to github.com/openmpp:
    - all svn Go code
    - R, ompp-ui, docker
    - openmpp.org web-site

2018_02_05:
  openM++ user interface (ompp-ui) alpha version
  oms web-service API changes related to ompp-ui

2017_12_19:
  major changes: beta version of openM++ web-service to access (oms)
  minor changes and bug fixes, update for Visual Studio 2017
  pre-alpha version of openM++ user interface (ompp-ui)

2017_06_05:
  major release: parameters sub-values for probabilistic statistical analysis
  minor changes and bug fixes, update for Visual Studio 2017

2016_12_29:
  minor release: fix R test script and dbcopy utility bug in delete model

2016_12_24:
  localizataion: support for translated messages in models and omc

2016_11_22:
  minor release to fix performance issues for large parameters csv and compilation

2016_11_15:
  minor release to improve dbcopy utility and fix some bugs

2016_09_28:
  support for model "publish": 
    import-export into and from json and csv files for model, input parameters set, run results
    direct copy between databases (eg: model using SQLite local.db and central storage is MySQL)
  model can directly use csv file(s) for input parameters, no database required
  data access library, API in Go, import-export tools (alpha)

2016_03_22:
  minor release to improve modeling task support and R package

2016_02_16:
  compiler and openM++ model code is stable now
  support modeling task: run model with 1000x sets of input parameters
    Linux build:   g++ version 4.8.5
    Linux MPI:   OpenMPI 1.10.0
    Windows build: Visual Studio 2015 update 1
    Windows MPI:   Microsoft MPI v7

2015_01_06:
  support multiple modelling threads
  many changes in compiler

2014_10_07:
  many fixes and updates in compiler, runtime and models build
  export to Excel from model.sqlite database
  database schema now compatible with SQLite, MySQL, PostgreSQL, MSSQL, DB2

2014_09_11:
  beta version build for Windows and Linux (CentOS)

2014_03_08:
  beta version of R openMpp package to read and write OpenM++ database.

2013_11_20:
  minor changes to alpha version, one database column renamed
  initial version of R openMpp package to read and write OpenM++ database.

2013_10_22:
  alpha version build for Windows and Linux (CentOS)

Enjoy,
amc1999
