<?xml version="1.0" encoding="utf-8"?>
<Project InitialTargets="Diagnostics" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">

  <!-- 
  FixModgen11
  -->
  

  <Target Name="FixModgen11" BeforeTargets="ModgenCompile">
    <Exec
      WorkingDirectory="$(OM_ROOT)/props"
      Command="powershell.exe -NonInteractive -ExecutionPolicy Bypass -File DetectAndFixModgen11Issue.ps1 $(ModgenLanguage)"
      IgnoreExitCode="true"
    >
      <Output TaskParameter="ExitCode" PropertyName="Modgen11FixDone"/>
    </Exec>
    <Error 
      Condition="'$(Modgen11FixDone)' != 0 And '$(ModgenLanguage)' == 'EN'" 
      Text="Modgen 11 configuration issue found and repaired. Please build your model again." 
    />
	<Error 
      Condition="'$(Modgen11FixDone)' != 0 And '$(ModgenLanguage)' == 'FR'" 
      Text="Un problème de configuration de Modgen 11 a été corrigé. Veuillez relancer la compilation." 
    />
  </Target>

 
  <!-- 
  Validate
  -->


  <Target Name="Validate">
    <Error
	    Text="SCENARIO_NAME cannot be empty"
        Condition=" ( '$(SCENARIO_NAME)' == '' )" />
    <Error
	    Text="SCENARIO_FOLDER does not exist. Value is $(SCENARIO_FOLDER)"
        Condition=" ( ! Exists('$(SCENARIO_FOLDER)') )" />
    <Error
	    Text="FIXED_PARAMETERS_FOLDER does not exist. Value is $(FIXED_PARAMETERS_FOLDER)"
        Condition=" ( '$(ENABLE_FIXED_PARAMETERS)' == 'true' And ! Exists('$(FIXED_PARAMETERS_FOLDER)') )" />
    <Error
	    Text="FRAMEWORK_ODAT does not exist. Value is $(FRAMEWORK_ODAT)"
        Condition=" ( ! Exists('$(FRAMEWORK_ODAT)') )" />
    <Error
	    Text="RUN_SCENARIO must be either true or false. Value is $(RUN_SCENARIO)"
        Condition=" ! ( '$(RUN_SCENARIO)' == 'true' Or '$(RUN_SCENARIO)' == 'false' )" />
    <Error
	    Text="MODEL_INI does not exist. Value is $(MODEL_INI)"
        Condition=" ! ( '$(MODEL_INI)' == '' Or Exists('../$(MODEL_INI)') )" />
  </Target>

  
  <!-- 
  Clean
  -->

  
  <Target Name="ModgenClean">
    <Message Text="Delete modgen compiler output" />
    <RemoveDir Directories="$(MODGEN_OUT_DIR)" />
  </Target>
  
  <Target Name="ScexPublishClean">
    <Message Text="Delete ScexPublish output" />
    <Delete Files="$(SCENARIO_SCEX)" />
  </Target>

  <PropertyGroup>
    <CleanDependsOn>ModgenClean;ScexPublishClean;$(CleanDependsOn)</CleanDependsOn>
  </PropertyGroup>
 
 
  <!-- 
  Build
  -->
 
 
  <Target Name="ModgenCompile"
          Inputs="@(MODGEN_INPUTS)"
          Outputs="@(MODGEN_OUTPUTS)"
          >
    <MakeDir Directories="$(MODGEN_OUT_DIR)" />
    <PropertyGroup>
      <START_TIME>$([System.DateTime]::Now)</START_TIME>
    </PropertyGroup>
    <Exec 
          Command="$(COMPLETE_MODGEN_EXE) -D $(MODGEN_OUT_DIR) -i $(MODGEN_IN_DIR) -EN" 
    />
    <Message Text="Modgen elapsed time: $([System.DateTime]::Now.Subtract($(START_TIME)))"
             Condition="'$(OM_ELAPSED_TIME_INFO)'=='1'"
    />
    <Message Text="Running patch utility $(COMPLETE_PATCH_MODGEN_OUTPUTS_EXE)" />
    <Exec Command="$(COMPLETE_PATCH_MODGEN_OUTPUTS_EXE) $(MODGEN_OUT_DIR)"
    />
    <Touch Files="@(MODGEN_OUTPUTS)" />
    <WriteLinesToFile 
        Condition="!Exists('$(PCH_CXX)')"
        File="$(PCH_CXX)"
        Lines="#include &quot;model.h&quot;"
        Overwrite="true"
        Encoding="Unicode"
    />
  </Target>

  <PropertyGroup>
    <BuildDependsOn>ModgenCompile;$(BuildDependsOn)</BuildDependsOn>
  </PropertyGroup>
 
 
  <!-- 
  ScexPublish
  -->
  
  
  <PropertyGroup>
    <PUBLISH_TICKLE>$(MODEL_BIN_DIR)/$(MODEL_NAME)_$(SCENARIO_NAME).publish.tickle</PUBLISH_TICKLE>
    <FRAMEWORK_OMPP>$(MODEL_CODE_DIR)/ompp_framework.ompp</FRAMEWORK_OMPP>
    <SCENARIO_SCEX>$(PUBLISH_DIR)/$(SCENARIO_NAME).scex</SCENARIO_SCEX>
    <COPY_PARAMS_OPT Condition="( '$(SCEX_COPY_PARAMETERS)' == 'true' )" >--copy_params</COPY_PARAMS_OPT>
  </PropertyGroup>
 
  <Target Name="ScexPublish"
          Inputs="$(FRAMEWORK_ODAT);$(FRAMEWORK_OMPP);@(SCENARIO_DATS)"
          Outputs="$(SCENARIO_SCEX)"
          AfterTargets="Build"
          >
    <MakeDir Directories="$(PUBLISH_DIR)" />
    <Delete Files="$(SCENARIO_SCEX)" />
    <Exec WorkingDirectory="$(ProjectDir)"
          Command=" $(COMPLETE_OMPP_CREATE_SCEX_EXE) --scex $(SCENARIO_SCEX) --odat $(FRAMEWORK_ODAT) --ompp $(FRAMEWORK_OMPP) $(COPY_PARAMS_OPT) --run_ini &quot;$(MODEL_INI_PATH)&quot; --working_dir $(WORKING_DIR) @(SCENARIO_DATS, ' ') "
    />
    <Touch  Files="$(PUBLISH_TICKLE)"
            AlwaysCreate="true"
            />
  </Target>

 
  <!--
  GenerateHelp
  -->

  
  <PropertyGroup>
    <!-- The following property prepares arguments to the model executable. -->
    <GENERATE_HELP_OPTS>-help -s</GENERATE_HELP_OPTS>
    <GENERATE_HELP_TICKLE>$(MODEL_BIN_DIR)/$(MODEL_NAME).help.tickle</GENERATE_HELP_TICKLE>
  </PropertyGroup>

  <Target Name="GenerateHelp"
          Condition="'$(GENERATE_HELP)'=='true'" 
          Inputs="$(PUBLISH_TICKLE)"
          Outputs="$(GENERATE_HELP_TICKLE)"
          AfterTargets="GenerateDocDB"
          >
    <Message Text="Generating model help for $(MODEL_NAME)..." />
    <Exec WorkingDirectory="$(TargetDir)"
          Command="$(TargetPath) $(GENERATE_HELP_OPTS)"
          IgnoreExitCode="true"
          />
    <Touch  Files="$(GENERATE_HELP_TICKLE)"
            AlwaysCreate="true"
            />
  </Target>


 
  <!--
  GenerateDocDB
  -->

  
  <PropertyGroup>
    <!-- The following property prepares arguments to the model executable. -->
    <GENERATE_DOCDB_OPTS>-doc -s</GENERATE_DOCDB_OPTS>
    <GENERATE_DOCDB_TICKLE>$(MODEL_BIN_DIR)/$(MODEL_NAME).docdb.tickle</GENERATE_DOCDB_TICKLE>
  </PropertyGroup>

  <Target Name="GenerateDocDB"
          Condition="'$(GENERATE_DOCDB)'=='true'" 
          Inputs="$(PUBLISH_TICKLE)"
          Outputs="$(GENERATE_DOCDB_TICKLE)"
          AfterTargets="ScexPublish"
          >
    <Message Text="Generating documentation DB for $(MODEL_NAME)..." />
    <Exec WorkingDirectory="$(TargetDir)"
          Command="$(TargetPath) $(GENERATE_DOCDB_OPTS)"
          IgnoreExitCode="true"
          />
    <Touch  Files="$(GENERATE_DOCDB_TICKLE)"
            AlwaysCreate="true"
            />
  </Target>


  <!--
  RunModel
  -->

  
  <PropertyGroup>
    <!-- The following property prepares arguments to the model executable. -->
    <RUN_MODEL_OPTS>-sc $(SCENARIO_SCEX) -s</RUN_MODEL_OPTS>
    <RUN_MODEL_TICKLE>$(MODEL_BIN_DIR)/$(MODEL_NAME).run.tickle</RUN_MODEL_TICKLE>
  </PropertyGroup>

  <Target Name="RunModel"
          Condition="'$(RUN_SCENARIO)'=='true'" 
          Inputs="$(PUBLISH_TICKLE)"
          Outputs="$(RUN_MODEL_TICKLE)"
          AfterTargets="GenerateHelp"
          >
    <Message Text="Running scenario $(SCENARIO_NAME) using $(MODEL_NAME)..." />
    <Message Text="$(TargetPath) $(RUN_MODEL_OPTS)" />
    <Exec WorkingDirectory="$(TargetDir)"
          Command="$(TargetPath) $(RUN_MODEL_OPTS)"
          IgnoreExitCode="true"
          />
    <Touch  Files="$(RUN_MODEL_TICKLE)"
            AlwaysCreate="true"
            />
  </Target>


  <!-- 
  Diagnostics
  -->
 
 
  <Target Name="Diagnostics"
          Condition="'1'=='1'">
    <Message Text="MODEL_NAME=$(MODEL_NAME)" />
    <Message Text="SCENARIO_NAME=$(SCENARIO_NAME)" />
    <Message Text="SCENARIO_FOLDER=$(SCENARIO_FOLDER)" />
    <Message Text="FIXED_NAME=$(FIXED_NAME)" />
    <Message Text="FIXED_PARAMETERS_FOLDER=$(FIXED_PARAMETERS_FOLDER)" />
    <Message Text="GENERATE_HELP=$(GENERATE_HELP)" />
    <Message Text="MODEL_INI=$(MODEL_INI)" />
    <Message Text="SCEX_COPY_PARAMETERS=$(SCEX_COPY_PARAMETERS)" />
    <Message Text="GENERATE_DOCDB=$(GENERATE_DOCDB)" />
    <Message Text="RUN_SCENARIO=$(RUN_SCENARIO)" />
    <Message Text="OM_ROOT=$(OM_ROOT)" />
    <Message Text="BuildingInsideVisualStudio=$(BuildingInsideVisualStudio)" />
    <Message Text="VisualStudioVersion=$(VisualStudioVersion)" />
    <Message Text="PLATFORM_TOOLSET=$(PLATFORM_TOOLSET)" />
    <Message Text="CHARACTER_SET=$(CHARACTER_SET)" />

    <Message Text="MODGEN_VERSION=$(MODGEN_VERSION)" />
    <Message Text="MODGEN_ROOT=$(MODGEN_ROOT)" />
    <Message Text="MODGEN_INPUTS=@(MODGEN_INPUTS)" />
    <Message Text="MODGEN_OUTPUTS=@(MODGEN_OUTPUTS)" />
  </Target>

 
  <!-- 
  Visual Studio IDE integration
  -->
 
 
  <ItemGroup>
    <PropertyPageSchema Include="$(OM_ROOT)/props/model-modgen.VS.xml">
      <Context>Project</Context>
    </PropertyPageSchema>
  </ItemGroup>

</Project>