<?xml version="1.0" encoding="utf-8"?>
<Project InitialTargets="Validate;Diagnostics" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">

  <!-- 
  FixModgen11
  -->
  

  <Target Name="FixModgen11" BeforeTargets="OmcCompile">
    <Exec
      WorkingDirectory="$(OM_ROOT)/props"
      Command="powershell.exe -NonInteractive -ExecutionPolicy RemoteSigned -File DetectAndFixModgen11Issue.ps1 $(ModgenLanguage)"
      IgnoreExitCode="true"
    >
      <Output TaskParameter="ExitCode" PropertyName="Modgen11FixDone"/>
    </Exec>
    <Error 
      Condition="'$(Modgen11FixDone)' != 0 And '$(ModgenLanguage)' == 'EN'" 
      Text="Modgen 11 configuration issue found and repaired. Please build your model again." 
    />
	<Error 
      Condition="'$(Modgen11FixDone)' != 0 And '$(ModgenLanguage)' == 'FR'" 
      Text="Un problème de configuration de Modgen 11 a été corrigé. Veuillez relancer la compilation." 
    />
  </Target>

  
  <!-- 
  Validate
  -->


  <Target Name="Validate">
    <Error
	    Text="SCENARIO_NAME cannot be empty"
        Condition=" ( '$(SCENARIO_NAME)' == '' )" />
    <Error
	    Text="ENABLE_SCENARIO_PARAMETERS must be either 0 or 1. Value is $(ENABLE_SCENARIO_PARAMETERS)"
        Condition=" ! ( '$(ENABLE_SCENARIO_PARAMETERS)' == '0' Or '$(ENABLE_SCENARIO_PARAMETERS)' == '1' )" />
    <Error
	    Text="SCENARIO_PARAMETERS_FOLDER does not exist. Value is $(SCENARIO_PARAMETERS_FOLDER)"
        Condition=" ( '$(PUBLISH_SCENARIO)' == '1' And ! Exists('$(SCENARIO_PARAMETERS_FOLDER)') )" />
    <Error
	    Text="ENABLE_FIXED_PARAMETERS must be either 0 or 1. Value is $(ENABLE_FIXED_PARAMETERS)"
        Condition=" ! ( '$(ENABLE_FIXED_PARAMETERS)' == '0' Or '$(ENABLE_FIXED_PARAMETERS)' == '1' )" />
    <Error
	    Text="FIXED_PARAMETERS_FOLDER does not exist. Value is $(FIXED_PARAMETERS_FOLDER)"
        Condition=" ( '$(ENABLE_FIXED_PARAMETERS)' == '1' And ! Exists('$(FIXED_PARAMETERS_FOLDER)') )" />
    <Error
	    Text="GRID_COMPUTING must be either EMPTY or MPI. Value is $(GRID_COMPUTING)"
        Condition=" ! ( '$(GRID_COMPUTING)' == 'EMPTY' Or '$(GRID_COMPUTING)' == 'MPI' )" />
    <Error
	    Text="DB_PROVIDER must be set to SQLITE. Value is $(DB_PROVIDER)"
        Condition=" ! ( '$(DB_PROVIDER)' == 'SQLITE' )" />
    <Error
	    Text="RUN_SCENARIO must be either 0 or 1. Value is $(RUN_SCENARIO)"
        Condition=" ! ( '$(RUN_SCENARIO)' == '0' Or '$(RUN_SCENARIO)' == '1' )" />
    <Error
	    Text="EXPORT_CSV must be either 0 or 1. Value is $(EXPORT_CSV)"
        Condition=" ! ( '$(EXPORT_CSV)' == '0' Or '$(EXPORT_CSV)' == '1' )" />
    <Error
	    Text="EXPORT_EXCEL must be either 0 or 1. Value is $(EXPORT_EXCEL)"
        Condition=" ! ( '$(EXPORT_EXCEL)' == '0' Or '$(EXPORT_EXCEL)' == '1' )" />
    <Error
	    Text="EXPORT_EXCEL_LAUNCH must be either 0 or 1. Value is $(EXPORT_EXCEL_LAUNCH)"
        Condition=" ! ( '$(EXPORT_EXCEL_LAUNCH)' == '0' Or '$(EXPORT_EXCEL_LAUNCH)' == '1' )" />
  </Target>

  
  <!-- 
  Clean
  -->
  
  
  <Target Name="OmcClean">
    <Message Text="Delete omc compiler output" />
    <RemoveDir Directories="$(OMC_OUT_DIR)" />
  </Target>

  <PropertyGroup>
    <CleanDependsOn>OmcClean;$(CleanDependsOn)</CleanDependsOn>
  </PropertyGroup>

  
  <!-- 
  Build
  -->
  
  <Target Name="OmcCompile"
          Inputs="@(OMC_INPUTS)"
          Outputs="@(OMC_OUTPUTS)"
          >
    <MakeDir Directories="$(OMC_OUT_DIR)" />
    <PropertyGroup>
      <START_TIME>$([System.DateTime]::Now)</START_TIME>
    </PropertyGroup>
    <Message Text="$(OMC_EXE) -m $(MODEL_NAME) -s $(SCENARIO_NAME) -i $(OMC_IN_DIR) -o $(OMC_OUT_DIR) -u $(OMC_USE_DIR) $(OMC_IN_SCENARIO_OPT) $(OMC_IN_FIXED_OPT) -Omc.noLineDirectives $(NO_LINE_DIRECTIVES)" />
    <Exec Command="$(COMPLETE_OMC_EXE) -m $(MODEL_NAME) -s $(SCENARIO_NAME) -i $(OMC_IN_DIR) -o $(OMC_OUT_DIR) -u $(OMC_USE_DIR) $(OMC_IN_SCENARIO_OPT) $(OMC_IN_FIXED_OPT) -Omc.noLineDirectives $(NO_LINE_DIRECTIVES)" />
    <Message Text="omc elapsed time: $([System.DateTime]::Now.Subtract($(START_TIME)))"
             Condition="'$(OM_ELAPSED_TIME_INFO)'=='1'"
    />
    <WriteLinesToFile 
        Condition="'$(USE_PCH)'=='1' And !Exists('$(PCH_CXX)')"
        File="$(PCH_CXX)"
        Lines="#include &quot;omc/omPch.h&quot;"
        Overwrite="true"
        Encoding="Unicode"
    />
  </Target>

  <PropertyGroup>
    <BuildDependsOn>OmcCompile;$(BuildDependsOn)</BuildDependsOn>
  </PropertyGroup>
  
  
  <!--
  SQLitePublish
  -->

  
  <!-- The following properties help make the SQLitePublish target and output more readable. -->
  <PropertyGroup>
    <PUBLISH_TICKLE>$(MODEL_BIN_DIR)/$(MODEL_NAME)_$(SCENARIO_NAME).publish.tickle</PUBLISH_TICKLE>
    <PUBLISH_SQLITE_REL>$([MSBuild]::MakeRelative($(ProjectDir),$(PUBLISH_SQLITE)))</PUBLISH_SQLITE_REL>
    <OM_SQL_DIR_REL>$([MSBuild]::MakeRelative($(ProjectDir),$(OM_SQL_DIR)))</OM_SQL_DIR_REL>
    <!--  Replace back slash by forward slash. -->
    <OM_SQL_DIR_REL>$(OM_SQL_DIR_REL.Replace(&quot;\&quot;,&quot;/&quot;))</OM_SQL_DIR_REL>
  </PropertyGroup>

  <Target Name="SQLitePublish" 
          Inputs="@(OMC_SQL_OUTPUTS)"
          Outputs="$(PUBLISH_TICKLE)"
          AfterTargets="link"
          >
    <MakeDir Directories="$(PUBLISH_DIR)" />
    <Delete Files="$(PUBLISH_SQLITE)" />

    <Message Text="Move @(OMC_SQLITE_OUTPUT) to $(PUBLISH_SQLITE)" />
    <Move SourceFiles="@(OMC_SQLITE_OUTPUT)" DestinationFiles="$(PUBLISH_SQLITE)" />

    <Message Text="$(SQLITE_EXE) $(PUBLISH_SQLITE_REL) &lt; $(OM_SQL_DIR_REL)/sqlite/optional_meta_views_sqlite.sql" />
    <Exec Command="$(COMPLETE_SQLITE_EXE) $(PUBLISH_SQLITE_REL) &lt; $(OM_SQL_DIR_REL)/sqlite/optional_meta_views_sqlite.sql" />

    <Message Text="$(SQLITE_EXE) $(PUBLISH_SQLITE_REL) &lt; src/$(MODEL_NAME)_optional_views_sqlite.sql" />
    <Exec Command="$(COMPLETE_SQLITE_EXE) $(PUBLISH_SQLITE_REL) &lt; src/$(MODEL_NAME)_optional_views_sqlite.sql" />
    
    <Touch  Files="$(PUBLISH_TICKLE)"
            AlwaysCreate="true"
            />
  </Target>

  <!--
  RunModel
  -->

  
  <PropertyGroup>
    <!-- The following property prepares arguments to the model executable. -->
    <MODEL_OPTS Condition="'$(MEMBERS)'   != ''">$(MODEL_OPTS) -General.Subsamples $(MEMBERS)</MODEL_OPTS>
    <MODEL_OPTS Condition="'$(THREADS)'   != ''">$(MODEL_OPTS) -General.Threads $(THREADS)</MODEL_OPTS>
    <MODEL_OPTS>$(MODEL_OPTS) -OpenM.Database &quot;Database=$(PUBLISH_SQLITE); Timeout=86400; OpenMode=ReadWrite;&quot;</MODEL_OPTS>
    <RUN_MODEL_TICKLE>$(MODEL_BIN_DIR)/$(MODEL_NAME).run.tickle</RUN_MODEL_TICKLE>
    <MPIEXEC_OPTS Condition="'$(PROCESSES)' != ''">-n $(PROCESSES)</MPIEXEC_OPTS>
  </PropertyGroup>

  <Target Name="RunModel"
          Condition="'$(RUN_SCENARIO)'=='1' And '$(GRID_COMPUTING)' == 'EMPTY'" 
          Inputs="$(PUBLISH_TICKLE)"
          Outputs="$(RUN_MODEL_TICKLE)"
          AfterTargets="SQLitePublish"
          >
    <Message Text="Running scenario $(SCENARIO_NAME) using $(MODEL_NAME)..." />
    <Message Text="$(TargetPath) $(MODEL_OPTS)" />
    <Exec WorkingDirectory="$(TargetDir)"
          Command="$(TargetPath) $(MODEL_OPTS)"
          />
    <Touch  Files="$(RUN_MODEL_TICKLE)"
            AlwaysCreate="true"
            />
  </Target>
<!--  
  <Target Name="RunModel"
          Condition="'$(RUN_SCENARIO)'=='1' And '$(GRID_COMPUTING)' == 'MPI'" 
          Inputs="$(PUBLISH_TICKLE)"
          Outputs="$(RUN_MODEL_TICKLE)"
          AfterTargets="SQLitePublish"
          >
    <Message Text="Running scenario $(SCENARIO_NAME) using $(MODEL_NAME)..." />
    <Message Text="mpiexec $(MPIEXEC_OPTS) $(TargetPath) $(MODEL_OPTS)" />
    <Exec WorkingDirectory="$(TargetDir)"
          Command="mpiexec $(MPIEXEC_OPTS) $(TargetPath) $(MODEL_OPTS)"
          />
    <Touch  Files="$(RUN_MODEL_TICKLE)"
            AlwaysCreate="true"
            />
  </Target>
-->

  <!--
  ExportCsv
  -->

  
  <PropertyGroup>
    <CSV_EXPORT_DIR>$(PUBLISH_DIR)/$(SCENARIO_NAME)</CSV_EXPORT_DIR>
  </PropertyGroup>

  <Target Name="ExportCsv"
          Condition="'$(EXPORT_CSV)'=='1'"
          AfterTargets="RunModel"
          >
    <RemoveDir Directories="$(CSV_EXPORT_DIR)" />
    <Message Text="Exporting scenario $(SCENARIO_NAME) to csv..." />
    <Message Text="$(COMPLETE_OMPP_EXPORT_CSV_EXE) &quot;$(PUBLISH_SQLITE)&quot; &quot;$(CSV_EXPORT_DIR)&quot;" ContinueOnError="true"/>
    <Exec Command="$(COMPLETE_OMPP_EXPORT_CSV_EXE) &quot;$(PUBLISH_SQLITE)&quot; &quot;$(CSV_EXPORT_DIR)&quot;" ContinueOnError="true"/>
  </Target>

  
  <!--
  ExportExcel
  -->

  
  <PropertyGroup>
    <EXCEL_EXPORT_OUT>$(PUBLISH_DIR)/$(SCENARIO_NAME)(tbl).xlsx</EXCEL_EXPORT_OUT>
    <!-- excel_export -lang option to specify language to use for exported Excel workbook -->
    <EXCEL_EXPORT_OPT Condition="'$(EXPORT_EXCEL_LANG)'!=''">--lang $(EXPORT_EXCEL_LANG)</EXCEL_EXPORT_OPT>
  </PropertyGroup>

  <Target Name="ExportExcel"
          Condition="'$(EXPORT_EXCEL)'=='1'" 
          Inputs="$(RUN_MODEL_TICKLE)"
          Outputs="$(EXCEL_EXPORT_OUT)"
          AfterTargets="RunModel"
          >
    <Message Text="Exporting scenario $(SCENARIO_NAME) to Excel..." />
    <Message Text="$(COMPLETE_OMPP_EXPORT_EXCEL_EXE) $(EXCEL_EXPORT_OPT) &quot;$(PUBLISH_SQLITE)&quot; &quot;$(EXCEL_EXPORT_OUT)&quot;" ContinueOnError="true"/>
    <Exec Command="$(COMPLETE_OMPP_EXPORT_EXCEL_EXE) $(EXCEL_EXPORT_OPT) &quot;$(PUBLISH_SQLITE)&quot; &quot;$(EXCEL_EXPORT_OUT)&quot;" ContinueOnError="true"/>
  </Target>

  
  <!--
  RunExcel
  -->

  
  <Target Name="RunExcel"
          Condition="'$(EXPORT_EXCEL_LAUNCH)'=='1'"
          AfterTargets="ExportExcel"
          >
    <Message Text="Launching Excel with outputs from scenario $(SCENARIO_NAME)..." />
    <Exec Command="&quot;$(EXCEL_EXPORT_OUT)&quot;" ContinueOnError="true"/>
  </Target>

 
  <!-- 
  Diagnostics
  -->
 
 
  <Target Name="Diagnostics"
          Condition="'1'=='1'">
    <Message Text="MODEL_NAME=$(MODEL_NAME)" />
    <Message Text="SCENARIO_NAME=$(SCENARIO_NAME)" />
    <Message Text="OM_ROOT=$(OM_ROOT)" />
    <Message Text="BuildingInsideVisualStudio=$(BuildingInsideVisualStudio)" />
    <Message Text="VisualStudioVersion=$(VisualStudioVersion)" />
    <Message Text="PLATFORM_TOOLSET=$(PLATFORM_TOOLSET)" />
    <Message Text="MODEL_CODE_DIR=$(MODEL_CODE_DIR)" />
    <Message Text="OMC_INPUTS=@(OMC_INPUTS)" />
    <Message Text="OMC_OUTPUTS=@(OMC_OUTPUTS)" />
  </Target>

</Project>