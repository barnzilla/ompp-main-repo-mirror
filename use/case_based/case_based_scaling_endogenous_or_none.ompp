/**
* @file    case_based_scaling_endogenous_or_none.ompp
* Implementation of population scaling
*
*/
// Copyright (c) 2013-2022 OpenM++ Contributors
// This code is licensed under the MIT license (see LICENSE.txt for details)

// forward declarations of fmk variables
namespace fmk {
    extern long long all_cases;
    extern thread_local long long member_cases;
}

parameters {
    //EN Disable population scaling
    bool DisablePopulationScaling;
};


/**
 * The population scaling factor to use for this member of the run.
 * 
 * This version scales the population to a value computed by the model, using the value supplied
 * by a previous call to SetPopulation() in model code.
 * OR
 * does no population scaling.
 * 
 * In tables, the size of the population will be the number of cases scaled to the model-
 * supplied total population.
 * OR
 * the size of the population reflects the number of total number of cases in the run.
 *
 * @return A double.
 */
double population_scaling_factor()
{
    if (DisablePopulationScaling) {
        // copy of implementation in case_based_scaling_none.ompp
        return (double)fmk::all_cases / (double)fmk::member_cases;
    }
    else {
        // copy of implementation in case_based_scaling_endogenous.ompp
        double denom = 0;
        if constexpr (om_weighted_tabulation_on) {
            denom = get_sum_weight();
        }
        else {
            denom = (double)fmk::member_cases;
        }
        return (double)fmk::set_population_value / denom;

    }
}
