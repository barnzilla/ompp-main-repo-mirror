/**
* @file    common.ompp
* Implementation of global functions for all models
* 
* The global functions in this module are declared in omSimulation.h.
* 
*/
// Copyright (c) 2013-2014 OpenM++
// This code is licensed under MIT license (see LICENSE.txt for details)

namespace fmk {

    /**
     * The number of simulations in the sample of simulations (not used)
     */
    int sample_size = 0;

    /**
     * The member to simulate of the sample of simulations.
     */
    int sample_member = 0;

    /**
     * The value for population scaling.
     * 
     * Specified by model code through a call to SetPopulation().
     */
    long set_population_value = 0;
}

/**
 * Set maximum time for fixed-precision time operations.
 * 
 * See Modgen Developer's Guide for more information.
 */
void SetMaxTime(double max_value)
{
    fixed_precision_float<Time::type>::set_max(max_value);
}

/**
 * Start event trace.
 * 
 * See Modgen Developer's Guide for more information.
 */
void StartEventTrace()
{
    BaseEvent::trace_event_on = true;
}

/**
 * Stop event trace.
 * 
 * See Modgen Developer's Guide for more information.
 */
void StopEventTrace()
{
    BaseEvent::trace_event_on = false;
}

/**
 * Total number of threads used in simulation.
 * 
 * See Modgen Developer's Guide for more information.
 */
int GetThreads()
{
    return 1;
}

/**
 * Numeric identifier of current thread for current simulation
 * 
 * See Modgen Developer's Guide for more information.
 */
int GetThreadNumber()
{
    return 1;
}

/**
 * Sets the total population used for population scaling
 *
 * @param lPopulation The total population.
 */
extern void SetPopulation(long lPopulation)
{
    fmk::set_population_value = lPopulation;
}


