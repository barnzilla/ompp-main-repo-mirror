//LABEL(modgen_framework, EN) Compatibility module for OpenM++

/* NOTE(modgen_framework, EN)
    As a special case, the OpenM++ compiler will ignore source code files starting with "modgen_".
    This allows the selective incorporation of code for the Modgen compiler.

	This module contains declarations and/or definitions of functions which differ
    in OpenM++ and Modgen.  This allows the use of a single model code base
    which can be used by either the Modgen compiler or the OpenM++ compiler.
*/

actor Person
{
    void initialize_attributes(); //EN Initialize all entity attributes (ompp)
    void enter_simulation(); //EN Have the entity enter the simulation (ompp)
    void exit_simulation(); //EN Have the entity exit the simulation (ompp)
};

void Person::initialize_attributes() { }
void Person::enter_simulation() { }
void Person::exit_simulation() { }

/**
 * Simulate all events for all entities in the simulation.
 */
void SimulateEvents()
{
	while (!gpoEventQueue->Empty())
	{
    	if (gbCancelled || gbErrors) 
    	{
			// Simulation cancelled by user, or run-time errors occurred.
			// Terminate the case immediately.
    		gpoEventQueue->FinishAllActors();
    	}
		else 
		{
			// Age actor to the time of the next event.
			gpoEventQueue->WaitUntil(gpoEventQueue->NextEvent()); 

			// Implement the next event.
			gpoEventQueue->Implement();
		}
	}
}

/**
 * The Simulation function is called by Modgen to simulate a set of cases.
 */
void Simulation()
{
    extern void CaseSimulation(); // defined elsewhere

	long  lCase = 0; 	// counter for cases simulated

	// Loop through all cases.
	for ( lCase = 0; lCase < CASES() && !gbInterrupted 
		  && !gbCancelled && !gbErrors; lCase++ )
	{
		// Tell the Modgen run-time to prepare to simulate a new case.
		StartCase(); 

		// Call the CaseSimulation function defined earlier in this module.
		CaseSimulation(); 

		// Tell the Modgen run-time that the case has been completed.
		SignalCase();
	}
}
							

