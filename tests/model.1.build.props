<?xml version="1.0" encoding="utf-8"?>
<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003">

  <!-- 
  Use this to specify additional openM directories and tools, such as omc.exe
  -->
  <PropertyGroup>
    <OM_INC_DIR Condition="'$(OM_INC_DIR)'==''">$(SolutionDir)../../include</OM_INC_DIR>
    <OM_BIN_DIR Condition="'$(OM_BIN_DIR)'==''">$(SolutionDir)../../bin</OM_BIN_DIR>
    <OM_LIB_DIR Condition="'$(OM_LIB_DIR)'==''">$(SolutionDir)../../lib/$(Platform)</OM_LIB_DIR>
    <BUILD_DIR>$(SolutionDir)../build</BUILD_DIR>
    <OMC_OUT_DIR>$(BUILD_DIR)/$(ProjectName)/src</OMC_OUT_DIR>
    <OMC_EXE>omc.exe</OMC_EXE>
  </PropertyGroup>
  
  <!-- 
  This is one arbitrarily selected omc output file whose timestamp is compared
  to each input model source module to determine if the omc target is to be run.
  -->
  <PropertyGroup>
    <OMC_TIMESTAMP_OUTPUT_FILE>$(OMC_OUT_DIR)/om_types0.h</OMC_TIMESTAMP_OUTPUT_FILE>
  </PropertyGroup>
  
  <!-- 
  This lists all omc C++ header file outputs
  -->
  <ItemGroup>
    <OMC_CXX_HEADER_OUTPUTS Include="$(OMC_OUT_DIR)/om_types0.h" />
    <OMC_CXX_HEADER_OUTPUTS Include="$(OMC_OUT_DIR)/om_types1.h" />
    <OMC_CXX_HEADER_OUTPUTS Include="$(OMC_OUT_DIR)/om_declarations.h" />
  </ItemGroup>

  <!-- 
  This lists all omc C++ source module outputs
  -->
  <ItemGroup>
    <OMC_CXX_MODULE_OUTPUTS Include="$(OMC_OUT_DIR)/om_definitions.cpp" />
    <OMC_CXX_MODULE_OUTPUTS Include="$(OMC_OUT_DIR)/om_developer.cpp" />
    <OMC_CXX_MODULE_OUTPUTS Include="$(OMC_OUT_DIR)/om_initializers.cpp" />
  </ItemGroup>

  <!-- 
  This lists all omc sql outputs
  -->
  <ItemGroup>
    <OMC_SQL_OUTPUTS Include="$(OMC_OUT_DIR)/$(SolutionName)_create_model.sql" />
    <OMC_SQL_OUTPUTS Include="$(OMC_OUT_DIR)/$(SolutionName)_optional_views.sql" />
  </ItemGroup>

  <!-- 
  Use this to choose database library provider, now only SQlite supported
    SQLITE - use SQlite version
  -->
  <PropertyGroup>
    <OM_DB_USE>SQLITE</OM_DB_USE>
  </PropertyGroup>

  <PropertyGroup Condition="'$(OM_DB_USE)'=='SQLITE'">
    <OM_DB_DEF>OM_DB_SQLITE</OM_DB_DEF>
    <OM_DB_INC>$(OM_INC_DIR)/libsqlite</OM_DB_INC>
    <OM_DB_LIB>libsqlite.lib</OM_DB_LIB>
    <OM_DB_LIB_DIR>$(OM_LIB_DIR)</OM_DB_LIB_DIR>
  </PropertyGroup>

  <!-- 
  Use this to choose message passing library provider
    MPI   - use MPI-based version (you must have MS-MPI installed)
    EMPTY - use empty version of the library which does nothing
  -->
  <PropertyGroup>
    <OM_MSG_USE>EMPTY</OM_MSG_USE>
  </PropertyGroup>

  <PropertyGroup Condition="'$(OM_MSG_USE)'=='EMPTY'">
    <OM_MSG_DEF>OM_MSG_EMPTY</OM_MSG_DEF>
    <OM_MSG_INC></OM_MSG_INC>
    <OM_MSG_LIB></OM_MSG_LIB>
    <OM_MSG_LIB_DIR></OM_MSG_LIB_DIR>
  </PropertyGroup>

  <PropertyGroup Condition="'$(OM_MSG_USE)'=='MPI'">
    <OM_MSG_DEF>OM_MSG_MPI</OM_MSG_DEF>
    <OM_MSG_INC>$(MSMPI_INC)</OM_MSG_INC>
    <OM_MSG_LIB>msmpi.lib;</OM_MSG_LIB>
  </PropertyGroup>

  <PropertyGroup Condition="'$(OM_MSG_USE)'=='MPI' And '$(Platform)'=='Win32'">
    <OM_MSG_LIB_DIR>$(MSMPI_LIB32)</OM_MSG_LIB_DIR>
  </PropertyGroup>

  <PropertyGroup Condition="'$(OM_MSG_USE)'=='MPI' And '$(Platform)'=='x64'">
    <OM_MSG_LIB_DIR>$(MSMPI_LIB64)</OM_MSG_LIB_DIR>
  </PropertyGroup>

  <!-- 
  Use this to choose UTF-8 conversion library
    MSSTL - use MS VC++ wstring_convert and codecvt_utf8
    ICONV - use libiconv
  -->
  <PropertyGroup>
    <OM_UCVT_USE>MSSTL</OM_UCVT_USE>
  </PropertyGroup>

  <PropertyGroup Condition="'$(OM_UCVT_USE)'=='MSSTL'">
    <OM_UCVT_DEF>OM_UCVT_MSSTL</OM_UCVT_DEF>
  </PropertyGroup>

  <PropertyGroup Condition="'$(OM_UCVT_USE)'=='ICONV'">
    <OM_UCVT_DEF>OM_UCVT_ICONV</OM_UCVT_DEF>
  </PropertyGroup>

</Project>