//LABEL(om_compatibility, EN) Compatibility module for OpenM++

/* NOTE(om_compatibility, EN)
    As a special case, the OpenM++ compiler will ignore a source code file with this name.
    This allows the selective incorporation of code if the model is compiled by the Modgen compiler.

	This module contains stub declarations and definitions for several functions
    required by OpenM++ for managing the entity lifecycle.  These functions are 
    called in appropriate places by developer code in the model.  The declarations
    and definitions for these functions are generated by the OpenM++ compiler.
    If the Modgen compiler is used, the versions of the functions in this module are used
    instead.  This allows a single code base for a model to support compilation by either
    the Modgen compiler or by the OpenM++ compiler.
*/

actor Person
{
    void initialize_attributes(); //EN Initialize all entity attributes (ompp)
    void enter_simulation(); //EN Have the entity enter the simulation (ompp)
    void exit_simulation(); //EN Have the entity exit the simulation (ompp)
};

void Person::initialize_attributes() { }
void Person::enter_simulation() { }
void Person::exit_simulation() { }

actor Thing
{
    void initialize_attributes(); //EN Initialize all entity attributes (ompp)
    void enter_simulation(); //EN Have the entity enter the simulation (ompp)
    void exit_simulation(); //EN Have the entity exit the simulation (ompp)
};

void Thing::initialize_attributes() { }
void Thing::enter_simulation() { }
void Thing::exit_simulation() { }

actor Toy
{
    void initialize_attributes(); //EN Initialize all entity attributes (ompp)
    void enter_simulation(); //EN Have the entity enter the simulation (ompp)
    void exit_simulation(); //EN Have the entity exit the simulation (ompp)
};

void Toy::initialize_attributes() { }
void Toy::enter_simulation() { }
void Toy::exit_simulation() { }

